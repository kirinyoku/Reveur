// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id             String        @id @default(cuid())
  title          String        @unique
  imgURL         String
  products       Product[]
  sub_categories SubCategory[]
}

model SubCategory {
  id         String     @id @default(cuid())
  title      String     @unique
  products   Product[]
  categories Category[]
}

enum EnumProductType {
  NORMAL
  FEATURED
  TRENDING
}

model Product {
  id             String          @id @default(cuid())
  title          String          @unique
  description    String
  brand          String
  imgURL         String
  img2URL        String
  currentPrice   Float
  oldPrice       Float
  isNew          Boolean         @default(false)
  type           EnumProductType @default(NORMAL)
  categories     Category[]
  sub_categories SubCategory[]
}

model Order {
  id       String @id @default(cuid())
  stripeID String
  products Json
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
